swagger: "2.0"
info:
  description: "MeetingBook is a standalone Calendly like application to manage appointments and share them with guests so that they can book the appointment."
  version: "1.0.0"  
  title: "MeetingBook"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
externalDocs:
  description: "Project Source"
  url: "https://github.com/meetingbook/meetingbook"
host: "localhost:5000"
basePath: "/"
schemes:
- "https"
- "http"
securityDefinitions:
  basic_auth:
    type: basic
tags:
  - name: sign in / sign up
    description: endpoints for Admin.
  - name: booking settings endpoint
    description: endpoint for Admin. All operations for the settings of the booking.
  - name: schedule endpoint
    description: endpoint for Admin. All operations on schedule.
  - name: calendars endpoint
    description: endpoint for Admin. All operations on calendars.
  - name: guest calendars endpoint
    description: endpoint for Guest. All operations on calendars.
paths:
  /admin:
    get:
      tags:
        - sign in / sign up
      description: Test API endpoint
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: |
            Authorization header contains the Basic word followed by a space 
            and a base64-encoded username:password string.
            For example, a header containing the "admin" and "Pyth0n" credentials would be encoded as "Authorization: Basic YWRtaW46UHl0aDBu"
      security:
        - basic_auth: []
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful admin request"
          schema:
            $ref: "#/definitions/AdminResponse"
  /registration:
    post:
      tags:
        - sign in / sign up
      summary: Register a new Admin
      description: Requires a new email (not yet registered in MeetingBook), password and the second input of this password to confirm the registration of a new Admin.
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/AdminRequest'
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful registration"
        "400":
           description: "Bad request. This is not a valid email or password is not specified"
           schema:
             $ref: '#/definitions/Problem'
        "409":
          description: "Conflict. This email is already registered in MeetingBook"
          schema:
            $ref: '#/definitions/Problem'
  /login:
    get:
      tags:
        - sign in / sign up
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: |
            Authorization header contains the Basic word followed by a space 
            and a base64-encoded username:password string.
            For example, a header containing the demo and p@55w0rd credentials 
            would be encoded as "Authorization: Basic ZGVtbzpwQDU1dzByZA=="
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful login"
        "401":
          schema:
            $ref: '#/definitions/Problem'
          description: "Unauthorized"
  /schedule:
    get:
      tags:
        - schedule endpoint
      parameters:
        - in: query
          name: status
          type: string
          enum: ["free", "booking"]
          description: |
            Filter "free or booking". 
            To get **free** slots: `/schedule?status="free"` 
            
            To get **booked** slots: `/schedule?status="booking"`
        - in: query
          name: week
          type: string
          description: |
            To get slots for a given week.
            `/schedule?week=2021-01-01`
            
            To get booking slots for a given week.
            `/schedule?week=2021-01-01&status="booking"`
        - in: query
          name: day
          type: string
          description: |
            To get slots for a given day.
            `/schedule?day=2021-01-01`
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Schedule"
        "400":
          description: "Bad Request"
          schema:
            $ref: '#/definitions/Problem'
        "401":
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/Problem'
      security:
        - basic_auth: []  
    delete:
      tags:
        - schedule endpoint
      summary: Delete interval for the admin
      description: |
            Request to delete interval for the admin.
            `/schedule/interval_id=34`
      parameters:
        - in: query
          name: interval_id
          type: string
          required: true
          description: |
            Delete interval in format: `/interval_id=34`
      responses:
        "200":
          description: "Successful operation"
      security:
        - basic_auth: []
    post:
      tags:
        - schedule endpoint
      summary: Add a new interval
      description: |
            request to add a new free interval for the admin. Format:
            `/schedule/start=2021-02-02T10:00&end=2021-02-02T14:00`
           
      parameters:
        - in: query
          name: start
          type: string
          required: true
          description: |
            Start interval in format: `start=2021-02-02T10:00`
        - in: query
          name: end
          type: string
          required: true
          description: |
            End interval in format: `end=2021-02-02T10:00`
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Slot"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
      security:
        - basic_auth: []
  /booking_settings:
    get:
      summary: get current settings
      tags:
        - booking settings endpoint
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/BookingSettings"
        "400":
          description: "Bad Request"
          schema:
            $ref: '#/definitions/Problem'
        "401":
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/Problem'
      security:
        - basic_auth: []
    put:
      summary: Update booking settings
      tags:
        - booking settings endpoint
      parameters:
        - in: body
          name: booking_settings
          description: description of the new booking settings
          schema:
            $ref: "#/definitions/BookingSettings"
      responses:
        "200":
          description: "Successfully updated"
          schema:
            $ref: "#/definitions/BookingSettings"
        "400":
          description: "Bad Request"
          schema:
            $ref: '#/definitions/Problem'
        "401":
          description: "Unauthorized"
          schema:
            $ref: '#/definitions/Problem'
      security:
        - basic_auth: []
  /calendars/{link_id}:
    get:
      tags:
        - guest calendars endpoint
      summary: |
        Returns a calendar according to the shareable link id. This is an endpoint for Guest.
        Unprotected endpoint.
      parameters:
        - in: path
          name: link_id
          type: string
          required: true
          description: |
              identifier of the shareable link (public calendar). See  "#/definitions/CalendarLink" for the format details.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Calendar"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Problem"
        "401":
          description: "Unauthorized - link has expired"
          schema:
            $ref: "#/definitions/Problem"
        "404":
          description: "Shareable link not found"
          schema:
            $ref: "#/definitions/Problem"
    delete:
      tags:
        - calendars endpoint
      summary: Delete shareable link (public calendar) for the admin
      parameters:
        - in: path
          name: link_id
          type: string
          required: true
          description: |
            identifier of the shareable link (public calendar). See  "#/definitions/CalendarLink" for the format details.
      responses:
        "200":
          description: "Deletion successful"
        "404":
          description: "Shareable link not found"
          schema:
            $ref: "#/definitions/Problem"
      security:
        - basic_auth: []
  /calendars/:
    get:
      tags:
        - calendars endpoint
      summary: returns all shareable links for the current admin
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CalendarLinks"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Problem"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Problem"
      security:
        - basic_auth: [ ]
    post:
      tags:
        - calendars endpoint
      summary: creates a new shareable link (or public calendar). Endpoint for admin.
      description: |
        Creates a new shareable link (calendar) to the schedule of the current admin.
        Available only for admins.
      parameters:
        - name: data
          in: body
          schema:
            $ref: '#/definitions/NewCalendarLink'
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CalendarLink"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Problem"
      security:
        - basic_auth: []
  
  /calendars/{link_id}/bookings/:
    post:
      tags:
        - guest calendars endpoint
      summary: Create a new booking
      parameters:
        - in: path
          name: link_id
          type: string
          required: true
          description: |
            identifier of the shareable link (public calendar). See  "#/definitions/CalendarLink" for the format details.
        - in: body
          name: booking_request
          description: Booking to create
          schema:
            $ref: '#/definitions/BookingRequest'
      responses:
        "200":
          description: "Successfully booked"
          schema:
            $ref: "#/definitions/Booking"
        "401":
          description: "Unauthorized - link id is invalid"
          schema:
            $ref: "#/definitions/Problem"
        "400":
          description: "Bad request - parameters are invalid"
          schema:
            $ref: "#/definitions/Problem"
        "409":
          description: "Conflict - unable to book (already booked or deleted or don't match booking_settings)"
          schema:
            $ref: "#/definitions/Problem"
  /calendars/{link_id}/bookings/{booking_id}:
    get:
      tags:
        - guest calendars endpoint
      summary: returns information about a given booking
      parameters:
        - in: path
          name: link_id
          type: string
          required: true
          description: |
            identifier of the shareable link (public calendar). See  "#/definitions/CalendarLink" for the format details.
        - in: path
          name: booking_id
          type: string
          description: |
            booking id
          required: true  
      responses:
        "200":
          description: "Successful request"
          schema:
            $ref: "#/definitions/Booking"
        "401":
          description: "Unauthorized - link id is invalid"
          schema:
            $ref: "#/definitions/Problem"
    delete:      
      tags:
        - guest calendars endpoint
      summary: cancels booking (guest cancels booking)
      parameters:
        - in: path
          name: link_id
          type: string
          required: true
          description: |
            identifier of the shareable link (public calendar). See  "#/definitions/CalendarLink" for the format details.
        - in: path
          name: booking_id
          type: string
          description: |
            booking id
          required: true
      responses:
        "200":
          description: "Successful request"
        "401":
          description: "Unauthorized - link id is invalid"
          schema:
            $ref: "#/definitions/Problem"
definitions:
  Schedule:
    type: "object"
    properties:
      slots:
        type: array
        items:
          $ref: "#/definitions/Slot"
  AdminResponse:
    type: "object"
    required:
      - id
      - email
      - avatar
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      password:
        type: "string"
        description: "Hashed and salted password"
      avatar:
        type: "string"
        format: "base64"
        description: "Admins avatar"
  AdminRequest:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
      password:
        type: "string"
        description: "Hashed and salted password"
  Slot:
    type: "object"
    required:
      - id
      - start
      - end
      - booking_id
    properties:
      id:
        type: "integer"
        format: "int64"
      start:
        type: "string"
        format: "date-time"
        description: "Start of the slot. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
      end:
        type: "string"
        format: "date-time"
        description: "End of the slot. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
      booking_id: 
        type: "integer"
        format: "int64"
        description: "ID reference to booking"
  BookingRequest:
    type: "object"
    required:
      - guest_name
      - guest_email
      - start
      - end
    properties:
      guest_name:
        type: "string"
        description: "Guest name who makes a booking"
      guest_email:
        type: "string"
        description: "Guest email who makes a booking"
      topic:
        type: "string"
        description: "Topic to discuss"
      start:
        type: "string"
        format: "date-time"
        description: "Start of the slot. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
      end:
        type: "string"
        format: "date-time"
        description: "End of the slot. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
  Booking:
    type: "object"
    required:
      - id
      - guest_name
      - guest_email
    properties:
      uuid:
        type: "string"
        description: "Guests uuid"
      guest_name:
        type: "string"
        description: "Guest name who makes a booking"
      guest_email:
        type: "string"
        description: "Guest email who makes a booking"
      topic:
        type: "string"
        description: "Topic to discuss"
      start:
        type: "string"
        format: "date-time"
        description: "Start of the slot. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
      end:
        type: "string"
        format: "date-time"
        description: "End of the slot. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
  Problem:
    type: object
    properties:
      status:
        type: integer
        format: int32
        description: |
          The HTTP status code generated by the origin server for this occurrence
          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
      detail:
        type: string
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
  NewCalendarLink:
    type: "object"
    properties:
      data:
        properties:
          valid_until:
            type: "string"
            format: "date-time"
            description: "Time of link expiration. The link is not accessible after that time. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
  CalendarLink:
    type: "object"
    required:
      - id
      - valid_until
    properties:
      id:
        type: "string"
        description: "Unique randomly generated string identifier of the calendar. Consists of digits and latin letters"
        minLength: 10
      valid_until:
        type: "string"
        format: "date-time"
        description: "Time of link expiration. The link is not accessible after that time. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
  CalendarLinks:
    type: "object"
    required:
      - links
    properties:
      links:
        description: "array of shareable links"
        type: array
        items:
          $ref: "#/definitions/CalendarLink"
  Calendar:
    type: "object"
    required:
      - id
      - slots
      - valid_until
    properties:
      id:
        type: "string"
        description: "Unique randomly generated string identifier of the calendar. Consists of digits and latin letters"
        minLength: 10
      valid_until:
        type: "string"
        format: "date-time"
        description: "Time of link expiration. The link is not accessible after that time. Defined as Datetime string in ISO 8601 https://en.wikipedia.org/wiki/ISO_8601"
      slots:
        description: "Available time slots"
        type: array
        items:
          $ref: "#/definitions/Slot"
  BookingSettings:
    description: "settings of the booking. When the guest sends a booking request, his request is checked against these settings"
    type: "object"
    properties:
      duration:
        type: "object"
        description: "Duration settings"
        items:
          $ref: "#/definitions/DurationSettings"
      start_time:
        type: "object"
        description: "Start time settings"
        items:
          $ref: "#/definitions/StartTimeSettings"
  DurationSettings:
    description: "settings for the booking duration"
    type: "object"
    properties:
      allowed_values:
        description: "list of allowed time values"
        type: array
        items:
          type: integer
  StartTimeSettings:
    description: "settings for the booking start time"
    type: "object"
    properties:
      allowed_values:
        description: "list of allowed values (amount of minutes for each hour). For example values of [15, 45] means that the user can book only time slots starting at XX:15 and XX:45, but not at XX:30."
        type: array
        items:
          type: integer
